---
title: "423A Group Project code graveyard"
author: "Michael Chrzan"
format: html
editor: visual
---

```{r}
nces2017_growth |> 
  filter(district_code == '82015' & building_name == 'All Buildings' & testing_group == 'All Students') |> 
  select(grade, subject, testing_group, contains('percent')) |> 
  filter(!str_detect(subject, "Science"), 
         !str_detect(grade, "All Grades"))
#How do we want to handle reading& writing vs. English Language Arts in the above code?? !!!!!

#(includes science)
nces2017_growth |> 
  filter(district_code == '82015' & building_name == 'All Buildings' & testing_group == 'All Students') |> 
  mutate(year = 2017) |> 
  select(year, 
         grade, 
         subject, 
         testing_group, 
         contains('percent'), 
         -testing_group) |> 
  filter(!str_detect(grade, "All Grades"), 
         grade == '11')
```

```{r readiness}
nces2016_readiness <- nces2016_readiness |> 
  filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
  mutate(year = 2016) |> 
  select(year, 
         math_percent_ready, 
         ebrw_percent_ready, 
         all_subject_percent_ready)

nces2017_readiness <- nces2017_readiness |> 
  filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
  mutate(year = 2017) |> 
  select(year, 
         math_percent_ready, 
         ebrw_percent_ready, 
         all_subject_percent_ready)

nces2018_readiness <- nces2018_readiness |> 
  filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
  mutate(year = 2018) |> 
  select(year, 
         math_percent_ready, 
         ebrw_percent_ready, 
         all_subject_percent_ready)

nces2019_readiness <- nces2019_readiness |> 
  filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
  mutate(year = 2019) |> 
  select(year, 
         math_percent_ready, 
         ebrw_percent_ready, 
         all_subject_percent_ready)

nces_16_19_readiness <- bind_rows(nces2016_readiness, 
                                  nces2017_readiness, 
                                  nces2018_readiness, 
                                  nces2019_readiness)

nces_16_19_readiness
```

```{r}
#Getting Growth Data
nces2017_growth <- read_csv('NCES Data/Growth/(2016-2017) Student Growth.csv') |> clean_names()
nces2018_growth <- read_csv('NCES Data/Growth/(2017-2018) Student Growth (2017-18).csv') |> clean_names()
nces2019_growth <- read_csv('NCES Data/Growth/(2018-2019) Student Growth.csv') |> clean_names()

#Trying to Align with Growth Data
nces_allYears |> 
  pivot_longer(cols = ends_with('tested'), 
               names_to = 'grade_sub_tested',
               values_to = 'num_tested') |> 
  pivot_longer(cols = ends_with('proficient'), 
               names_to = 'grade_proficient', 
               values_to = 'num_proficient') |> 
  mutate(grade_sub_tested = str_replace(grade_sub_tested, "_tested$", ""),
         grade_proficient = str_replace(grade_proficient, "_proficient$", "")) |> 
  filter(grade_sub_tested == grade_proficient) |> 
  mutate(percent_proficient = 100*as.numeric(num_proficient)/as.numeric(num_tested)) |> 
  select(year, 
         contains('enrollment'), 
         graduation_rate_4_year, 
         dropout_rate_4_year, 
         grade_sub_tested, 
         num_tested, 
         num_proficient, 
         percent_proficient, 
         -grade_proficient) |> 
  filter(!str_detect(grade_sub_tested, "social_studies"),
         !str_detect(grade_sub_tested, "science"),
         !str_detect(grade_sub_tested, "grade_3"))
```

```{r}
#Old code for cleaning readiness tibbles
# nces2016_readiness <- nces2016_readiness |> 
#   filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
#   mutate(year = 2016) |> 
#   select(year, 
#          math_percent_ready, 
#          ebrw_percent_ready, 
#          all_subject_percent_ready)
# 
# nces2017_readiness <- nces2017_readiness |> 
#   filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
#   mutate(year = 2017) |> 
#   select(year, 
#          math_percent_ready, 
#          ebrw_percent_ready, 
#          all_subject_percent_ready)
# 
# nces2018_readiness <- nces2018_readiness |> 
#   filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
#   mutate(year = 2018) |> 
#   select(year, 
#          math_percent_ready, 
#          ebrw_percent_ready, 
#          all_subject_percent_ready)
# 
# nces2019_readiness <- nces2019_readiness |> 
#   filter(district_code == '82015' & building_name == 'All Buildings' & subgroup == 'All Students') |> 
#   mutate(year = 2019) |> 
#   select(year, 
#          math_percent_ready, 
#          ebrw_percent_ready, 
#          all_subject_percent_ready)


```

```{r old-housing-value-viz}
all_data_gentrify |> 
  pivot_longer(cols = c(value_less_than_50_000, value_50_000_to_99_999, value_100_000_to_149_999, value_150_000_to_199_999, value_200_000_to_299_999, value_300_000_to_499_999, value_500_000_to_999_999, value_1_000_000_or_more),
               names_to = 'value_category', 
               values_to = 'number_of_properties') |> 
  select(year, value_median_dollars, value_category, number_of_properties) |> 
  mutate(year = as.character(year), 
         value_category = case_when(
           value_category == 'value_less_than_50_000' ~ 'Less than $50k',
           value_category == 'value_50_000_to_99_999' ~ '$50k - $99k', 
           value_category == 'value_100_000_to_149_999' ~ '$100k - $149k', 
           value_category == 'value_150_000_to_199_999' ~ '$150k - $199k', 
           value_category == 'value_200_000_to_299_999' ~ '$200k - $299k',
           value_category == 'value_300_000_to_499_999' ~ '$300k - $499k', 
           value_category == 'value_500_000_to_999_999' ~ '$500k - $999k', 
           value_category == 'value_1_000_000_or_more' ~ '$1000000+')) |> 
  
  ggplot() + 
  geom_col(aes(x = factor(value_category, 
                          levels = c('Less than $50k',
                                     '$50k - $99k', 
                                     '$100k - $149k', 
                                     '$150k - $199k', 
                                     '$200k - $299k',
                                     '$300k - $499k', 
                                     '$500k - $999k', 
                                     '$1000000+'), 
                          ordered = TRUE),
               y = number_of_properties), 
           position = 'dodge') + 
  facet_grid(~year) +
  labs(title = "Detroit's Housing Values are Increasing",
       subtitle = "Detroit Housing Values, 2010-2020", 
       x = 'Housing Value', 
       y = 'Number of Properties') + 
  coord_flip() +
  scale_fill_brewer(palette = 'Greens') +
  theme_minimal()
```

```{r}
all_data_gentrify |> 
  pivot_longer(cols = contains('percent_educational_attainment') & !contains("25_years_and_over") & !contains('or_higher'), 
               names_to = 'education_level', 
               values_to = 'percent_at_level') |>
  mutate(education_level = str_replace_all(education_level, "percent_educational_attainment_", ""), 
         education_level = str_replace_all(education_level, "9th_to_12th_grade_no_diploma", "Some High School"), 
         education_level = str_replace_all(education_level, "associates_degree", "Associate's Degree"), 
         education_level = str_replace_all(education_level, "bachelors_degree", "Bachelor's Degree"), 
         education_level = str_replace_all(education_level, "graduate_or_professional_degree", "Graduate Degree"), 
         education_level = str_replace_all(education_level, "high_school_graduate_includes_equivalency", "High School Graduate"),
         education_level = str_replace_all(education_level, "less_than_9th_grade", "Less than 9th Grade"), 
         education_level = str_replace_all(education_level, "some_college_no_degree", "Some College")) |>
  ggplot() + 
  geom_col(aes(x = year,
               y = percent_at_level, 
               fill = factor(education_level,
                    ordered = TRUE,
                    levels = c("Associate's Degree", 
                               "Some High School",
                               "Bachelor's Degree",
                               "Graduate Degree")))) +
  facet_wrap(~education_level, ncol = 4) +
  theme_minimal() + 
  theme(legend.position = 'none') +
  scale_fill_manual(values = c('darkgreen', 'darkgreen', 'darkgreen', 'darkgreen')) 
```

```{r laisha-viz-acs-ed-1}
ggplot(educ_detroit, aes(x = factor(year), group = 1)) +
  geom_line(aes(y = percent_educational_attainment_9th_to_12th_grade_no_diploma, 
                color = "No High School Diploma"), linewidth = 1) +
  geom_line(aes(y = percent_educational_attainment_high_school_graduate_includes_equivalency,
                color = "GED"), linewidth = 1) +
  geom_line(aes(y = percent_educational_attainment_some_college_no_degree, 
                color = "Some college"), linewidth = 1) +
  geom_line(aes(y = percent_educational_attainment_associates_degree, 
                color = "Associate's Degree"), linewidth = 1) +
  geom_line(aes(y = percent_educational_attainment_bachelors_degree, 
                color = "Bachelor's Degree"), linewidth = 1) +
  geom_line(aes(y = percent_educational_attainment_graduate_or_professional_degree, 
                color = "PhD"), linewidth = 1) +
  labs(title = "Population and Education Trends in Detroit, MI",
       x = "\nYear",
       y = "% of Population\n",
       color = "") +
  scale_color_manual(values = c("No High School Diploma" = "blue",
                                "GED" = "purple",
                                "Some college" = "pink",
                                "Associate's Degree" = "gray",
                                "Bachelor's Degree" = "green", 
                                "PhD" = "red"),
                     breaks = c("No High School Diploma",
                                "GED",
                                "Some college",
                                "Associate's Degree",
                                "Bachelor's Degree",
                                "PhD")) +
  geom_vline(xintercept = c("2019"), linetype = "dashed", color = "gray", linewidth = 1) +
  theme_minimal() +
  scale_x_discrete(labels = educ_detroit$year) +
  theme(axis.text.x = element_text(hjust = 0.8, angle = 45, vjust=0.5)) 
```

```{r viz-acs-ed-2}
educ_detroit |>
  select(year, 
         percent_bachelors_or_higher = percent_educational_attainment_percent_bachelors_degree_or_higher,
         percent_high_school_or_higher = percent_educational_attainment_percent_high_school_graduate_or_higher) |>
  pivot_longer(cols = -year, 
               names_to = "educational_attainment",
               values_to = "percentage") |>
  mutate(educational_attainment = gsub("percent_", "", educational_attainment),
         educational_attainment = factor(educational_attainment, 
                                         levels = c("high_school_or_higher", "bachelors_or_higher"))) |>
  ggplot(aes(x = year, 
             y = percentage, 
             fill = educational_attainment)) +
    geom_area(position = "identity", 
              alpha = 0.7) +
    scale_fill_manual(values = c("high_school_or_higher" = "purple", "bachelors_or_higher" = "green"),
                      name = "Educational Attainment",
                      labels = c("high_school_or_higher" = "GED or higher", "bachelors_or_higher" = "Bachelor's or higher")) +
    labs(title = "Educational Attainment in Detroit",
         x = "\nYear",
         y = "% of Population\n",
         fill = "Educational Attainment") +
    theme_minimal()
```

```{r opp-insights}
#FOR CONSIDERATION…Opportunity Insights
#Opportunity Insights Data
cz_coll_allSubgroups <- read_csv("cz_coll_allSubgroups.csv") 

cz_frac_coll_plus2016 <- read_csv("cz_frac_coll_plus2016.csv") 

cz_hs_allSubgroups <- read_csv('cz_hs_allSubgroups.csv') 


coll_gradRates <- cz_coll_allSubgroups |> 
  filter(name == 'Detroit, MI')

hs_gradRates <- cz_hs_allSubgroups |> 
  filter(name == 'Detroit, MI')

det_gradRates <- inner_join(coll_gradRates, hs_gradRates, 
           by = c('cz', 'name'))

#Remove Late Cohorts
det_gradRates <- det_gradRates |> 
  select(-ends_with("_l"))

#Not Sure What We're Doing with this one?? 
fracColl <- cz_frac_coll_plus2016 |> 
  rename(name = Name) |> 
  filter(name == 'Detroit, MI')



```

```{r}
# Create the boxplot
p1 <- all_data_gentrify_final |> 
  ggplot() + 
  geom_boxplot(aes(x = gentrifying, 
                   y = total_enrollment, 
                   fill = factor(all_data_gentrify_final$gentrifying, 
                             levels = c("FALSE", 
                                        "TRUE")))) +
  theme_minimal() + 
  scale_fill_manual("Gentrifying", values = c("lightgreen", "darkgreen")) +
  theme(legend.position = 'none') +
  labs(title = 'Gentrifying Years Have Larger Enrollment', 
       x = 'Gentrifying Years', 
       y = 'Total Enrollment')

# Create the line plot
p2 <- all_data_gentrify_final |> 
  ggplot() + 
  geom_line(aes(x = year, 
                y = total_enrollment, 
                group = 1), 
            color = 'lightgreen', 
            linewidth = 1.5) +
  geom_point(data = filter(all_data_gentrify_final, as.character(gentrifying) == "TRUE"), 
             aes(x = year, 
                 y = total_enrollment), 
             color = 'darkgreen',
             size = 4) +
  theme_minimal() + 
  theme(legend.position = 'none') +
  labs(x = 'Year', 
       y = 'Total Enrollment')

# Combine the two plots
grid.arrange(p1, p2, ncol = 1)
```

```{r verify-gentrification-OLD}
#WANT TO HAVE A LINE GRAPH OVER YEAR WITH DIFFERENT LINES FOR ENROLLMENT WITH BACKGROUND COLOR SHADING FOR WHEN A YEAR COUNTS AS BEING GENTRIFIED
all_data_gentrify |> 
  filter(year != 2010) |> 
  pivot_longer(cols = contains('enrollment') & !starts_with('total') & (starts_with('grade') | starts_with('kinder')), 
               names_to = 'enrollment_group', 
               values_to = 'enrollment_number') |> 
  mutate(pct_total_enrollment = 100*enrollment_number/total_enrollment) |> 
  select(enrollment_group, enrollment_number, total_enrollment, pct_total_enrollment, everything()) |> 
  ggplot() +
  geom_tile(aes(x = year, 
             y = pct_total_enrollment, 
             fill = gentrifying), width = 1, height = 1) + 
  scale_fill_brewer(palette = 'Paired') + 
  geom_line(aes(x = year, 
             y = pct_total_enrollment)) + 
  facet_wrap(~enrollment_group)
  scale_color_viridis(discrete = T)
```

```{r pct-ready-draft-figure}
all_data_gentrify |> 
  filter(year != 2010) |>
  pivot_longer(cols = contains('ready'), 
             names_to = 'subject_readiness', 
             values_to = 'pct_ready') |>
  ggplot() +
  geom_tile(aes(x = year,
                y = pct_ready,
                fill = gentrifying), width = 1, height = 1) +
  geom_line(aes(x = year, 
           y = pct_ready)) +
  facet_wrap(~subject_readiness) +
  scale_color_viridis(discrete = T)
```

```{r verify-gentrification-NEW}
all_data_gentrify |> 
  filter(year != 2010) |> 
  ggplot(aes(x = gentrifying, 
             y = total_enrollment)) + 
  geom_boxplot()

```

```{r enrollment-by-type}
all_data_gentrify_final |>  
  pivot_longer(cols = contains('enrollment') & !starts_with('grade') & !starts_with('kinder') & !starts_with('total'), 
               names_to = 'enrollment_group', 
               values_to = 'enrollment_number') |> 
  mutate(pct_total_enrollment = 100*enrollment_number/total_enrollment, 
         enrollment_group = str_replace_all(enrollment_group, "_enrollment", "")) |> 
  select(enrollment_group, enrollment_number, total_enrollment, pct_total_enrollment, everything()) |>
  ggplot() + 
  geom_line(aes(x = year, 
             y = enrollment_number, 
             color = enrollment_group)) + 
  scale_color_viridis(discrete = T) + 
  geom_line(aes(x = year, 
                y = total_enrollment), 
            size = 2, 
            color = 'grey') + 
  facet_wrap(~enrollment_group) 

all_data_gentrify_final |>  
  pivot_longer(cols = contains('enrollment') & !starts_with('grade') & !starts_with('kinder') & !starts_with('total'), 
               names_to = 'enrollment_group', 
               values_to = 'enrollment_number') |> 
  mutate(pct_total_enrollment = 100*enrollment_number/total_enrollment, 
         enrollment_group = str_replace_all(enrollment_group, "_enrollment", "")) |> 
  select(enrollment_group, enrollment_number, total_enrollment, pct_total_enrollment, everything()) |>
  ggplot(aes(x = gentrifying, 
             y = pct_total_enrollment)) + 
  geom_violin(aes(fill = gentrifying)) + 
  facet_wrap(~enrollment_group) + 
  scale_fill_manual("Gentrifying", values = c('grey', 'darkgreen')) +
  theme(legend.position = 'none') + 
  coord_flip()
```

```{r}
#NOT SURE WE NEED THIS
all_data_gentrify |> 
  pivot_longer(cols = contains('percent_educational_attainment') & !contains("25_years_and_over") & contains('or_higher'), 
               names_to = 'education_level', 
               values_to = 'percent_at_level') |> 
  mutate(education_level = str_replace_all(education_level, "percent_educational_attainment_percent_", ""),
         education_level = str_replace_all(education_level, "high_school_graduate_or_higher", "Diploma/GED or Higher"), 
         education_level = str_replace_all(education_level, "bachelors_degree_or_higher", "Bachelor's Degree or Higher")) |>
  ggplot() + 
  geom_col(aes(x = year,
                y = percent_at_level), 
           fill = 'darkgreen') + 
  facet_grid(~education_level)
```

```{r checking-correlations}
all_data_gentrify |> 
  filter(year > 2010) |> 
  select(contains('delta')) |> 
  ggpairs()


```
